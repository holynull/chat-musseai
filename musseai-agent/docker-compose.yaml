volumes:
    langgraph-data:
        driver: local
    mysql_data:
        driver: local
    langgraph_api_data:
        driver: local
    telegram_bot_data:
        driver: local
    trading_signal_data:
        driver: local

services:
    langgraph-redis:
        image: redis:6
        healthcheck:
            test: redis-cli ping
            interval: 5s
            timeout: 1s
            retries: 5
        ports:
          - "6379:6379"
    
    langgraph-postgres:
        image: postgres:16
        ports:
            - "5433:5432"
        environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        volumes:
            - langgraph-data:/var/lib/postgresql/data
        healthcheck:
            test: pg_isready -U postgres
            start_period: 10s
            timeout: 1s
            retries: 5
            interval: 5s
    
    langgraph-api:
        image: musseai-agent
        ports:
            - "8080:8000"
        depends_on:
            langgraph-redis:
                condition: service_healthy
            langgraph-postgres:
                condition: service_healthy
        env_file:
            - .env.musseai_agent
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - default
        volumes:
            - langgraph_api_data:/logs/
            - ./chromedriver-linux64:/chromedriver-linux64
        # Chrome运行所需的安全配置
        security_opt:
            - seccomp:unconfined
        shm_size: 2gb
        cap_add:
            - SYS_ADMIN
        restart: unless-stopped
        
    mysql:
        image: mysql:8.0
        container_name: musseai-mysql
        restart: always
        ports:
          - "3307:3306"
        volumes:
          - mysql_data:/var/lib/mysql
          - ./src/mysql/crypto_portfolio.sql:/docker-entrypoint-initdb.d/01-crypto_portfolio.sql
          - ./src/mysql/insert_assets_cp.sql:/docker-entrypoint-initdb.d/02-insert_assets_cp.sql
          - ./src/mysql/auth.sql:/docker-entrypoint-initdb.d/03-auth.sql
        environment:
          - MYSQL_ROOT_PASSWORD=root
          - MYSQL_DATABASE=crypto_portfolio
          - MYSQL_USER=asset_agent
          - MYSQL_PASSWORD=asset_agent_123456

    telegram-bot:
        image: musseai-telegram-bot
        container_name: musseai-telegram-bot
        restart: unless-stopped
        depends_on:
            - langgraph-api
        env_file:
            - .env.telegram_bot
        volumes:
            - telegram_bot_data:/app/logs
            - ./telegram_users:/app/src/telegram_users
        environment:
            - PYTHONPATH=/app/src
            - LOG_LEVEL=INFO
        networks:
            - default
        healthcheck:
            test: ["CMD", "python", "-c", "import os; exit(0 if os.getenv('TELEGRAM_BOT_TOKEN') else 1)"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 10s

    trading-signal:
        image: musseai-trading-signal
        container_name: musseai-trading-signal
        restart: unless-stopped
        depends_on:
            - langgraph-api
            - langgraph-redis
        env_file:
            - .env.trading_signal
        volumes:
            - trading_signal_data:/app/logs
            - ./telegram_users:/app/src/telegram_users
        environment:
            - PYTHONPATH=/app/src
            - LOG_LEVEL=INFO
        networks:
            - default
        healthcheck:
            test: ["CMD", "python", "-c", "import sys; sys.path.insert(0, 'src'); from trading_signal import load_config; load_config()"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s

networks:
  default:
    driver: bridge
